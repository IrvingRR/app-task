{"version":3,"sources":["components/FormTask.js","components/TaskElement.js","components/TasksList.js","components/ModalDelete.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["FormTask","addTask","useState","inputTask","setInputTask","form","setForm","id","title","completed","task","setTask","expressionTask","Form","className","onSubmit","e","preventDefault","setTimeout","target","reset","GroupInput","Input","type","name","placeholder","valid","autoComplete","onChange","prevTask","uuid","value","onKeyUp","test","MessageInput","Button","MessageError","styled","div","input","props","css","button","TaskElement","toggleTask","showModalDelete","Row","Cell","Label","htmlFor","toString","IconCheck","icon","faCheck","CheckBox","checked","ButtonAction","onClick","faTrash","tr","td","label","FontAwesomeIcon","TasksList","tasks","deleteTasksCompleted","length","map","colSpan","filter","ModalDelete","modalDelete","hiddenModalDelete","setModalDelete","deleteTask","ContainerModal","state","Card","Title","Actions","ButtonConfirm","ButtonCancel","h2","App","setTasks","useEffect","storageTasks","JSON","parse","localStorage","getItem","setItem","stringify","newTasks","prevTasks","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.925e61b4.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport uuid from 'react-uuid'\r\n\r\nconst FormTask = function ({ addTask }) {\r\n\r\n    // States\r\n    const [inputTask, setInputTask] = useState(null);\r\n    const [form, setForm] = useState(null);\r\n    const [task, setTask] = useState({ id:null, title: '', completed: false });\r\n\r\n    // Expression to validation\r\n    const expressionTask = /^[a-zA-ZÀ-ÿ\\s0-9]{4,40}$/;\r\n\r\n    // Functions\r\n    const hiddenMessageError = () => {\r\n        setTimeout(() => {\r\n            setForm(\"true\");\r\n        }, 3000);\r\n    }\r\n\r\n    const validation = (e) => {\r\n      if(expressionTask.test(e.target.value)) {\r\n          setInputTask(\"true\");\r\n      } else {\r\n            setInputTask(\"false\");\r\n      }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n\r\n        setTask(prevTask => {\r\n            const newTask = { ...prevTask, id:uuid(), title: e.target.value };\r\n            return newTask;\r\n        });\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputTask === 'false' || task.title === '') {\r\n            setForm('false');\r\n            hiddenMessageError();\r\n\r\n        } else {\r\n            setForm('true');\r\n            addTask(task);\r\n            setTask({ id:null, title: '', completed: false });\r\n            e.target.reset();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form className=\"formTask\" onSubmit={handleSubmit}>\r\n            <GroupInput>\r\n                <Input className=\"formTask-input\" type=\"text\" name=\"task\" placeholder=\"Add new task\" valid={inputTask} autoComplete=\"off\" onChange={handleChange} onKeyUp={validation} />\r\n            </GroupInput>\r\n                <MessageInput valid={inputTask}>\r\n                    <p>Task must have a minimum of 4 characters and a maximum of 40 and only letters and numbers</p>\r\n                </MessageInput>\r\n            <Button className=\"formTask-button\">Add</Button>\r\n            <MessageError form={form}>Please enter a valid value</MessageError>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default FormTask;\r\n\r\n/* Style Components\r\n----------------------------------- */\r\n\r\nconst Form = styled.form`\r\n  width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 16px;\r\n  padding: 20px 30px;\r\n  text-align: center;\r\n`;\r\n\r\nconst GroupInput = styled.div`\r\n    width: 100%;\r\n    height: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 100%;\r\n    max-width: 300px;\r\n    height: 100%;\r\n    border-radius: 80px;\r\n    border: 2px solid whitesmoke;\r\n    padding: 10px 20px;\r\n    font-family: var(--font);\r\n    font-weight: 600;\r\n    color: #fff;\r\n    background: transparent;\r\n    transition: 0.3s ease;\r\n\r\n    &:focus {\r\n        border-color: #fff;\r\n    }\r\n\r\n    &::placeholder {\r\n        color: whitesmoke;\r\n    }\r\n\r\n    ${props => props.valid === 'false' && css`\r\n        border-color: var(--primary) !important;\r\n    `}\r\n`;\r\n\r\nconst Button = styled.button`\r\n    padding: 10px 20px;\r\n    border-radius: 80px;\r\n    font-weight: 600;\r\n    letter-spacing: 1px;\r\n    background: transparent;\r\n    border: 2px solid #fff;\r\n    color: #fff;\r\n    transition: 0.3s ease;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n    background: #fff;\r\n    color: var(--primary);\r\n    }\r\n`;\r\n\r\nconst MessageInput = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background: var(--primary);\r\n    color: #fff;\r\n    font-size: 13px;\r\n    transition: 0.3s ease;\r\n    z-index: 100;\r\n    overflow: hidden;\r\n    padding: 0 10px;\r\n    height: 0;\r\n    border-radius: 0;\r\n    opacity: 0;\r\n    font-size: 11px;\r\n\r\n    ${props => props.valid === 'false' && css`\r\n        padding: 15px 10px;\r\n        height: 50px;\r\n        opacity: 1;\r\n        border-radius: 30px;\r\n    `}\r\n`;\r\n\r\nconst MessageError = styled.div`\r\n    width: 100%;\r\n    padding: 0 20px;\r\n    background: var(--gradient-error);\r\n    color: #fff;\r\n    font-weight: 600;\r\n    border-radius: 30px;\r\n    height: 0;\r\n    transition: 0.3s ease;\r\n    font-size: 13px;\r\n    opacity: 0;\r\n    overflow: hidden;\r\n\r\n    ${props => props.form === 'false' && css`\r\n        padding: 10px 20px;\r\n        height: 40px;\r\n        opacity: 1;\r\n    `}\r\n\r\n    @media only screen and (max-width: 375px) {\r\n        font-size: 12px;\r\n    }\r\n`;","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TaskElement = function ({ title, completed, id, toggleTask, showModalDelete }) {\r\n\r\n    const handleChange = () => {\r\n        toggleTask(id);\r\n    }\r\n\r\n    const handleClick = () => {\r\n        showModalDelete(id);\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Cell className=\"title-task\">\r\n                <p>{title}</p>\r\n            </Cell>\r\n            <Cell>\r\n                <Label htmlFor={`status-task-${id}`} completed={completed.toString()}>\r\n                    <IconCheck icon={faCheck} completed={completed.toString()}/>\r\n                </Label>\r\n                <CheckBox type=\"checkbox\" name=\"status-task\" checked={completed} onChange={handleChange} id={`status-task-${id}`} />\r\n            </Cell>\r\n            <Cell className=\"action-task\">\r\n                <ButtonAction onClick={handleClick}>\r\n                    <FontAwesomeIcon icon={faTrash}/>\r\n                </ButtonAction>\r\n            </Cell>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default TaskElement;\r\n\r\n/* Style Components\r\n----------------------------------- */\r\n\r\nconst Row = styled.tr`\r\n    padding: 10px 0;\r\n`;\r\n\r\nconst Cell = styled.td`\r\n\r\n      &.title-task {\r\n          text-align: left;\r\n      }\r\n\r\n      &.action-task {\r\n          text-align: center;\r\n      }\r\n\r\n      @media only screen and (max-width: 425px) {\r\n        overflow-x: auto;\r\n        font-size: 12px;\r\n        max-width: 100px;\r\n    }\r\n\r\n`;\r\n\r\nconst Label = styled.label`\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 20px;\r\n    height: 20px;\r\n    padding: 10px;\r\n    border: 2px solid #fff;\r\n    border-radius: 100%;\r\n    background: transparent;\r\n    cursor: pointer;\r\n    transition: 0.3s ease;\r\n\r\n    ${props => props.completed === 'true' && css`\r\n      background: var(--primary);\r\n      border-color: var(--primary);\r\n    `}\r\n\r\n    &:hover {\r\n        border-color: var(--primary);\r\n    }\r\n`;\r\n\r\nconst CheckBox = styled.input`\r\n    display: none;\r\n`;\r\n\r\nconst ButtonAction = styled.button`\r\n    padding: 10px 20px;\r\n    border-radius: 10px;\r\n    background: #ff0d7a70;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    transition: 0.3s ease;\r\n\r\n    &:hover {\r\n        background: var(--primary);\r\n    }\r\n`;\r\n\r\nconst IconCheck = styled(FontAwesomeIcon)`\r\n    color: #fff;\r\n    transition: 0.3s ease;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n\r\n    ${props => props.completed === 'true' && css`\r\n        opacity: 1;\r\n        visibility: visible;\r\n    `}\r\n`;","import React, {Fragment} from 'react';\r\nimport TaskElement from './TaskElement';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst TasksList = function ({tasks, toggleTask, deleteTasksCompleted, showModalDelete}) {\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            <h2 className=\"table-title\">My Tasks</h2>\r\n            <div className=\"container-table\">\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"thead-task\">Task</th>\r\n                            <th>Completed</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tasks.length > 0\r\n                            ?   tasks.map((task) => <TaskElement  showModalDelete={showModalDelete} toggleTask={toggleTask} id={task.id} key={task.id} title={task.title} completed={task.completed} />)\r\n                            :   <tr>\r\n                                    <td colSpan=\"3\" className=\"table-message\">No tasks</td>\r\n                                </tr>\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"container-table-footer\">\r\n                    <button className=\"container-table-footer-button\" onClick={deleteTasksCompleted}>\r\n                        <FontAwesomeIcon className=\"container-table-footer-button-icon\" icon={faTrash} />\r\n                        <span>Delete completeds</span>\r\n                    </button>\r\n                    <p className=\"container-table-footer-amount\">\r\n                        Pendind tasks:\r\n                        <span>\r\n                            {tasks.filter((task) => task.completed === false).length}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport default TasksList;","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\n\r\nconst ModalDelete = function({title, modalDelete, setModalDelete, hiddenModalDelete, deleteTask}) {\r\n\r\n    const handleClickConfirm = () => {\r\n        deleteTask(modalDelete.id);\r\n    }\r\n    \r\n    return (\r\n        <ContainerModal modalDelete={modalDelete.state.toString()}>\r\n            <Card modalDelete={modalDelete.state.toString()}>\r\n                <Title>\r\n                    {title}\r\n                </Title>\r\n                <Actions>\r\n                    <ButtonConfirm onClick={handleClickConfirm}>Confirm</ButtonConfirm>\r\n                    <ButtonCancel onClick={hiddenModalDelete}>Cancel</ButtonCancel>\r\n                </Actions>\r\n            </Card>\r\n        </ContainerModal>\r\n    )\r\n}\r\n\r\nexport default ModalDelete;\r\n\r\n/* Style Components\r\n----------------------------------- */\r\n\r\nconst Title = styled.h2`\r\n    color: #fff;\r\n    text-align: center;\r\n    padding: 10px;\r\n`;\r\n\r\nconst ContainerModal = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    background: var(--dark-gradient);\r\n    z-index: 100;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    padding-top: 30px;\r\n    transition: 0.3s ease;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n\r\n    ${props => props.modalDelete === \"true\" && css`\r\n        opacity: 1;\r\n        visibility: visible;\r\n    `}\r\n`;\r\n\r\nconst Card = styled.div`\r\n    width: 80%;\r\n    max-width: 500px;\r\n    background: rgba(0,0,0,0.9);\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: 0.3s ease;\r\n    transform: translateY(-30px);\r\n    opacity: 0;\r\n\r\n     ${props => props.modalDelete === \"true\" && css`\r\n        transform: translateY(0);\r\n        opacity: 1;\r\n    `}\r\n`;\r\n\r\nconst Actions = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 20px;\r\n    padding: 10px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n    padding: 10px 20px;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n    font-weight: 600;\r\n    letter-spacing: 1px;\r\n    transition: 0.3s ease;\r\n    border: 1px solid transparent;\r\n    cursor: pointer;\r\n`;\r\n\r\nconst ButtonConfirm = styled(Button)`\r\n    background: var(--primary);\r\n\r\n    &:hover {\r\n        background: var(--primary-hover);\r\n    }\r\n`;\r\n\r\nconst ButtonCancel = styled(Button)`\r\n    background: transparent;\r\n    border-color: #fff;\r\n\r\n    &:hover {\r\n        background: #fff;\r\n        color: var(--primary);\r\n    }\r\n`","import React, {useState, useEffect} from \"react\";\nimport './App.css';\nimport FormTask from './components/FormTask';\nimport TasksList from './components/TasksList';\nimport ModalDelete from './components/ModalDelete';\n\nfunction App() {\n\n  const [tasks, setTasks] = useState([]);\n  const [modalDelete, setModalDelete] = useState({state: false, id: null});\n\n  useEffect(() => {\n    const storageTasks = JSON.parse(localStorage.getItem('tasks'));\n    if(storageTasks) {\n      setTasks(storageTasks);\n    }\n    \n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n\n  }, [tasks]);\n\n  const addTask = (task) => {\n    setTasks(prevTasks => {\n      const newTasks = [...prevTasks, task];\n      return newTasks;\n    });\n  }\n\n  const toggleTask = (id) => {\n    const newTasks = [...tasks];\n    const task = newTasks.find((task) => task.id === id);\n    task.completed = !task.completed;\n    setTasks(newTasks);\n  }\n\n  const deleteTask = (id) => {\n    const newTasks = tasks.filter((task) => task.id !== id);\n    setTasks(newTasks);\n    setModalDelete({state: false, id: null});\n  }\n\n  const deleteTasksCompleted = () => {\n    const newTasks = tasks.filter((task) => task.completed !== true);\n    setTasks(newTasks);\n  }\n\n  const showModalDelete = (id) => {\n    setModalDelete({state: true, id: id});\n  }\n\n  const hiddenModalDelete = () => {\n    setModalDelete({state: false, id: null});\n  }\n\n  return (\n    <main className=\"App\" >\n      <h1 className=\"app-title\">TaskList App</h1>\n      <ModalDelete title=\"Do you want delete this task?\" deleteTask={deleteTask} modalDelete={modalDelete} setModalDelete={setModalDelete} hiddenModalDelete={hiddenModalDelete} />\n\n        <FormTask addTask={addTask} />\n        <TasksList tasks={tasks} toggleTask={toggleTask} deleteTasksCompleted={deleteTasksCompleted} showModalDelete={showModalDelete} />\n    </main>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not local host. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the old content will have been purged and\r\n                // the fresh content will have been added to the cache.\r\n                // It's the perfect time to display a \"New content is\r\n                // available; please refresh.\" message in your web app.\r\n                console.log('New content is available; please refresh.');\r\n  \r\n                // Execute callback\r\n                if (config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        if (\r\n          response.status === 404 ||\r\n          response.headers.get('content-type').indexOf('javascript') === -1\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.register();"],"sourceRoot":""}